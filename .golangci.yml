version: "2"

linters:
  # We'll track the golangci-lint default linters manually
  # instead of letting them change without our control.
  default: none
  enable:
    - errcheck
    - govet
    - ineffassign
    - staticcheck
    - unused
    - errorlint
    - nolintlint # lints //nolint directives
    - revive

  settings:
    # These govet checks are disabled by default, but they're useful.
    govet:
      enable:
        - nilness
        - reflectvaluecompare
        - sortslice
        - unusedwrite

  exclusions:
    generated: lax
    rules:
      # Don't warn on unused parameters.
      # Parameter names are useful; replacing them with '_' is undesirable.
      - linters: [revive]
        text: 'unused-parameter: parameter \S+ seems to be unused, consider removing or renaming it as _'

      # staticcheck already has smarter checks for empty blocks.
      # revive's empty-block linter has false positives.
      # For example, as of writing this, the following is not allowed.
      #   for foo() { }
      - linters: [revive]
        text: "empty-block: this block is empty, you can remove it"

      # It's okay if internal packages and examples in docs/
      # don't have package comments.
      - linters: [revive]
        path: .+/internal/.+|^internal/.+|^docs/.+
        text: should have a package comment

      # It's okay for tests to use dot imports.
      - linters: [revive]
        path: _test\.go$
        text: should not use dot imports

issues:
  # Print all issues reported by all linters.
  max-issues-per-linter: 0
  max-same-issues: 0

  # Don't ignore some of the issues that golangci-lint considers okay.
  # This includes documenting all exported entities.
  exclude-use-default: false

  exclude-rules:
    # Don't warn on unused parameters.
    # Parameter names are useful; replacing them with '_' is undesirable.
    - linters: [revive]
      text: 'unused-parameter: parameter \S+ seems to be unused, consider removing or renaming it as _'

    # staticcheck already has smarter checks for empty blocks.
    # revive's empty-block linter has false positives.
    # For example, as of writing this, the following is not allowed.
    #   for foo() { }
    - linters: [revive]
      text: "empty-block: this block is empty, you can remove it"

    # Ignore logger.Sync() errcheck failures in example_test.go
    # since those are intended to be uncomplicated examples.
    - linters: [errcheck]
      path: example_test.go
      text: "Error return value of `logger.Sync` is not checked"
